@media (max-width: 1199px) {
  .navbar .navbar-text {
    padding-bottom: 15px;
    padding-top: 15px;
    padding-left: 15px;
    margin-top: 0;
    margin-bottom: 0;
  }
}

@media screen and (max-width: 768px) {
  #addEventFab {
    display: initial !important;
  }

  #home h1 {
    font-size: 3em !important;
  }
  .white-graphs {
    background-color: white;
  }
}

@media screen and (max-width: 500px) {
  .list-group-separator:before {
    width: 100% !important;
  }
  .list-group .list-group-item .row-action-primary {
    padding-right: 0px !important;
  }
  .panel-event {
    border-radius: 0px !important;
    border-left: 0px !important;
    border-right: 0px !important;
  }
  .panel-body-event {
    padding-left: 0px !important;
    padding-right: 0px !important;
  }
  .event-container {
    padding-left: 0px;
    padding-right: 0px;
  }
  .list-group .list-group-item {
    padding: 0px !important;
  }
  .event-row {
    margin-right: 0px;
  }
  .event-col {
    padding-right: 0px;
  }
}

.row-action-primary i {
  background: none !important;
  font-size: 2em !important;
  color: #000 !important;
}

.list-group-item a {
  color: #000;
}

button.modal-submit {
  margin-right: 1em !important;
}

button.modal-submit:hover {
  background-color: #8bc34a !important;
}

.navbar-right:last-child {
  margin-right: 0px !important;
}

h5.eventGroup {
  margin-left: 2em;
}

#addEventFab {
  display: none;
  position: fixed;
  z-index: 99999;
  right: 1.5em;
  bottom: 1.5em;
}

.ng-hide {
  z-index: -99999;
  bottom: -9999px !important;
  right: -9999px !important;
}



/*#logo {
  padding-top: 1px;
  padding-left: 26px;
}*/

/* general styles */
html, body {
  height: 100%;
  width: 100%;
}

/* padded section */
.pad-section {
  padding: 50px 0;
}
.pad-section img {
  width: 100%;
}
/* vertical-centered text */
.text-vcenter {
  display: table-cell;
  text-align: center;
  vertical-align: middle;
  background: rgba(0,0,0,0.25);
  color: white;
}
.text-vcenter h1 {
  font-size: 4.5em;
  font-weight: 700;
  margin: 0;
  padding: 0;
}

/* additional sections */
#home {
  background: url(../images/notebook.jpg) no-repeat center center fixed; 
  display: table;
  height: 100%;
  position: relative;
  width: 100%;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

#about {
}

#services {
  background-color: green;
  color: #ffffff;
}
#services .glyphicon {
  border: 2px solid #FFFFFF;
  border-radius: 50%;
  display: inline-block;
  font-size: 100px;
  height: 140px;
  line-height: 140px;
  text-align: center;
  vertical-align: middle;
  width: 140px;
}

#information {
  background: url(../images/so.jpg) no-repeat center center fixed; 
  display: table;
  height: 800px;
  position: relative;
  width: 100%;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

.panel-transparent {
  background-color: rgba(255, 255, 255, 0.9);
}

#google_map {
  height: 500px;
}

footer {
  padding: 20px 0;
}
footer .glyphicon {
  color: #333333;
  font-size: 60px;
}
footer .glyphicon:hover {
  color: #306d9f;
}

/*ANGULAR ANIMATIONS*/

/*
  We're using CSS transitions for when
  the enter and move events are triggered
  for the element that has the .singleEvent
  class
*/
.singleEvent.ng-enter, .singleEvent.ng-move {
  -webkit-transition:0.5s linear all;
  -moz-transition:0.5s linear all;
  -o-transition:0.5s linear all;
  transition:0.5s linear all;
  opacity:0;
}

/*
 The ng-enter-active and ng-move-active
 are where the transition destination properties
 are set so that the animation knows what to
 animate.
*/
.singleEvent.ng-enter.ng-enter-active,
.singleEvent.ng-move.ng-move-active {
  opacity:1;
}

/*
  We're using CSS keyframe animations for when
  the leave event is triggered for the element
  that has the .singleEvent class
*/
.singleEvent.ng-leave {
  -webkit-animation:0.5s my_animation;
  -moz-animation:0.5s my_animation;
  -o-animation:0.5s my_animation;
  animation:0.5s my_animation;
}

@keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}

/*
  Unfortunately each browser vendor requires
  its own definition of keyframe animation code...
*/
@-webkit-keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}

@-moz-keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}

@-o-keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}